#!/bin/bash
# ~/.xinitrc
# Source some scripts so we can start it normally 
if [ -d /etc/X11/xinit/xinitrc.d ]; then
  for f in /etc/X11/xinit/xinitrc.d/*; do
    [ -x "$f" ] && . "$f"
  done
  unset f
fi
#Awesome StatusColors Patch to dwm :)
colour_gry="\x01" # grey on black
colour_wht="\x02" # white on black
colour_dgry="\x04" # darkgrey on black
colour_blk="\x05" # black on darkgrey
colour_red="\x06" # colour_red on black
colour_grn="\x07" # green on black
colour_dylw="\x08" # orange on black
colour_ylw="\x09" # yellow on black
colour_blu="\x0A" # colour_blue on darkgrey
colour_mag="\x0B" # colour_magenta on darkgrey
colour_cyn="\x0C" # cyan on darkgrey

# Icon glyphs from font ohsnap.icons
glyph_msc="M"
glyph_cpu="C"
glyph_mem="M"
glyph_dl="D"
glyph_ul="U"
glyph_eml="E"
glyph_vol="<"
glyph_tim="C"
glyph_tor=" "
sep_solid="«"
sep_line="«"
sep_bar="\x"

print_song_info() {
  song_info="$(mpc current -f '[[[[%artist% æ ]%title%]]|[%file%]]' | head -c 75)"
  if [[ ! $song_info ]]; then
    song_info="Off"
  fi
  echo -ne "${colour_dgry}${colour_cyn} ${glyph_msc} ${song_info} "
}

print_mem_used() {
  mem_used="$(free -m | awk 'NR==2 {print $3}')"
  echo -ne "${glyph_mem}${mem_used}M"
}

print_volume() {
  volume="$(amixer get Master | tail -n1 | sed -r 's/.*\[(.*)%\].*/\1/')"
  echo -ne "${colour_dgry} ${colour_mag} ${glyph_vol} ${volume}% "
}

print_datetime() {
  datetime="$(date "+%a %d %b %H:%M")"
  echo -ne "${colour_blk}${colour_wht} ${glyph_tim} ${datetime}"
}

# network (from: http://dzen.geekmode.org/dwiki/doku.php?id=dzen:network-meter)
# cpu (from: https://bbs.archlinux.org/viewtopic.php?pid=661641#p661641)
rx_old=$(cat /sys/class/net/enp0s26f7u2/statistics/rx_bytes)
tx_old=$(cat /sys/class/net/enp0s26f7u2/statistics/tx_bytes)

while true; do
  # get new cpu idle and total usage
  eval $(awk '/^cpu /{print "cpu_idle_now=" $5 "; cpu_total_now=" $2+$3+$4+$5 }' /proc/stat)
  cpu_interval=$((cpu_total_now-${cpu_total_old:-0}))
  # calculate cpu usage (%)
  let cpu_used="100 * ($cpu_interval - ($cpu_idle_now-${cpu_idle_old:-0})) / $cpu_interval"

  # get new rx/tx counts
  rx_now=$(cat /sys/class/net/enp0s26f7u2/statistics/rx_bytes)
  tx_now=$(cat /sys/class/net/enp0s26f7u2/statistics/tx_bytes)
  # calculate the rate (K) and total (M)
  let rx_rate=($rx_now-$rx_old)/1024
  let tx_rate=($tx_now-$tx_old)/1024
  #  let rx_total=$rx_now/1048576
  #  let tx_total=$tx_now/1048576

  # output vars
  print_cpu_used() {
     echo -ne "${colour_blk}${colour_blu}${glyph_cpu}${cpu_used}% "
  }
  print_rx_rate() {
     echo -ne "${colour_blk}${colour_grn} ${glyph_dl}${rx_rate}K"
  }
  print_tx_rate() {
     echo -ne "${colour_gry}${colour_red} ${glyph_ul}${tx_rate}K"
  }
print_lang() {
while true ; do
	if [ "`xset -q | awk -F \" \" '/Group 2/ {print($4)}'`" = "on" ]; 
	then 
		  DWMLA="He" && export DWMLA 
	else 
		  DWMLA="En" && export DWMLA
	fi;
	sleep 0.1
	echo -ne "${colour_dgry}${colour_magenta}$DWMLA"
done &
}

print_netinf() {
  h=$(hostname)
  ip=$(ifconfig | awk 'NR==2 {print $2}')
  echo -ne "${colour_blk} ${colour_cyn} $h@$ip"
}

print_cpu_type() {
  cpu=awk 'BEGIN{FS=":"} /model name/ } print $2; exit }' /proc/cpuinfo | awk 'BEGIN{FS=" @"; OFS="\n"} { print $1; exit }'
  echo -ne "${colour_dgry} ${colour_blu} $cpu"
}

print_gpu() {
  gpu="GeForce GTX 650"
  temp=$(nvidia-settings -q gpucoretemp -t | awk "NR==1")
  it="°"
  echo -ne "${colour_blk} ${colour_grn} $gpu:$temp ${it}"
}

print_parts() {
  roots=$(df | awk 'NR==4 {print $2}')
  rootu=$(df | awk 'NR==4 {print $3}')
  echo -ne "${colour_dgry} ${colour_red} ${rootu}/${colour_dgry} ${colour_blu}${roots}"
}

# Pipe to status bar, not indented due to printing extra spaces/tabs
  xsetroot -name "$(print_song_info)\
$(print_cpu_used)\
$(print_mem_used)\
$(print_rx_rate)\
$(print_tx_rate)\
$(print_volume)\
$(print_datetime)" #; $(print_lang) | $(print_netinf) | $(print_cpu_type) | $(print_gpu) | $(print_parts)"

  # reset old rates
  rx_old=$rx_now
  tx_old=$tx_now
  cpu_idle_old=$cpu_idle_now
  cpu_total_old=$cpu_total_now
  # loop stats every 1 second
  sleep 1
done

# add font paths
xset fp default
[[ -d /usr/share/fonts/local ]] && xset +fp /usr/share/fonts/local
[[ -d /usr/share/fonts/OTF ]] && xset +fp /usr/share/fonts/OTF
[[ -d $HOME/.local/share/fonts ]] && xset +fp $HOME/.local/share/fonts
xset fp rehash
fc-cache -f -v &

# set background
feh --bg-scale $HOME/Pictures/wallpaper.jpg

#Xresources
xrdb ~/.Xresources

#Add Lang switching in al+shift
setxkbmap -option grp:switch,grp:alt_shift_toggle,grp_led:scroll us,il

#Music Player Daemon
#mpd

#Useful shit  
bash /home/nadav/.autostart

# start WM
exec dwm
